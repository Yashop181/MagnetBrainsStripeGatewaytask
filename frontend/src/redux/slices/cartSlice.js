import { createSlice } from "@reduxjs/toolkit";
import { toast } from "react-toastify";

// initialState of the cart is empty array 
const initialState = {
  cart: [],
};

// Create the cart slice using Redux Toolkit's createSlice function
const cartSlice = createSlice({
  name: "cartSlice", // Name of the slice
  initialState: initialState, // Initial state for the slice
  reducers: {
    // Action to add an item to the cart
    addtocart: (state, action) => {
      // Check if the item is already in the cart
      var myitem = state.cart.filter((key) => key.id === action.payload.id);
      if (myitem.length >= 1) {
        // Show a warning if the item is already in the cart
        toast.warn("This product is already in the cart");
      } else {
        // Add the item to the cart and show a success message
        state.cart.push(action.payload);
        toast.success("Successfully added to cart");
      }
    },

    // Action to increase the quantity of an item in the cart
    qtyIncrease: (state, action) => {
      for (var i = 0; i < state.cart.length; i++) {
        if (state.cart[i].id === action.payload.id) {
           // Increase the quantity of the item
          state.cart[i].quantity++;
        }
      }
    },
    // Action to decrease the quantity of an item in the cart
    qtyDecrease: (state, action) => {
      for (var i = 0; i < state.cart.length; i++) {
        if (state.cart[i].id === action.payload.id) {
          if (state.cart[i].quantity > 1) {
            // Decrease the quantity of the item if greater than 1
            state.cart[i].quantity--;
          } else {
            // Show a warning if the quantity is 1
            toast.warn("Quantity must be greater than 1");
          }
        }
      }
    },
    // Action to remove an item from the cart
    removeCart: (state, action) => {

        // Filter out the item to be removed and show a success message
      state.cart = state.cart.filter((item) => item.id !== action.payload.id);
      toast.success("Successfully removed from cart");
    },
     // Action to clear all items from the cart
    clearCart: (state) => {
      // Empty the cart and show a success message
      state.cart = [];
      toast.success("Cart cleared successfully");
    },

  },
});

// Export the actions generated by createSlice
export const { addtocart, qtyIncrease, qtyDecrease, removeCart,clearCart } = cartSlice.actions;

// Export the reducer to be used in the store
export default cartSlice.reducer;
